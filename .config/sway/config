### Variables
#
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term kitty
set $menu wofi --show run
set $eww_open ~/eww/eww/target/release/eww open-many weather profile quote search_full incognito-icon vpn-icon home_dir screenshot power_full reboot_full lock_full logout_full suspend_full
set $eww_close ~/eww/eww/target/release/eww close-all
# set $wifi 
set $background '~/Pictures/wallpapers/yuki.png'

### Output configuration
output * bg $background fill

# Font
font pango:Iosevka Medium 18

# Window borders
default_border none
default_floating_border normal
hide_edge_borders smart

# Gaps
smart_gaps on
gaps outer 10
gaps inner 10

# Set workspaces
set $ws1   1
set $ws2   2
set $ws3   3
set $ws4   4
set $ws5   5
set $ws6   6
set $ws7   7
set $ws8   8
set $ws9   9
set $ws0   10
set $wsF1  11
set $wsF2  12
set $wsF3  13
set $wsF4  14
set $wsF5  15
set $wsF6  16
set $wsF7  17
set $wsF8  18
set $wsF9  19
set $wsF10 20
set $wsF11 21
set $wsF12 22

# assign some apps to workspaces
assign [class="Firefox"] 1
assign [class="emacs"] 2
assign [app_id="kitty"] 3
assign [class="krita"] 4
for_window [class="Spotify"] move window to workspace number 5 # Spotify dc 'bout assign.
assign [class="teams"] 6
assign [class="insync"] 7
assign [app_id="telegramdesktop"] 8
assign [class="discord"] 8

# Example configuration if one day I will have second monitor:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs


### Idle configurationcat symbols

# exec swayidle -w \
#          timeout 300 'exec $lock' \
#          timeout 600 'swaymsg "output * dpms off"' \
#	   resume 'swaymsg "output * dpms on"' \
#          before-sleep 'exec $lock'

### Input configuration

    	  # Touchpad:
    	  input "1267:12433:ELAN0504:01_04F3:3091_Touchpad" {
	  	dwt enabled
		tap enabled
		natural_scroll enabled
		middle_emulation enabled
	  }

	  # Layout:
	  input * {
	  	xkb_layout "us, ru"
		xkb_options "grp:win_space_toggle"
	  }

### Key bindings
#
# Basics:
#
    bindsym $mod+Return exec $term
    bindsym --to-code $mod+d exec $menu
    bindsym --to-code $mod+x exec swaymsg "workspace 2; exec emacs;"

    bindsym --to-code $mod+Shift+q kill
    bindsym --to-code $mod+Shift+c reload
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? cat symbolsThis will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

#    bindsym $mod+End exec $wifi

    # Multimedia
    
    bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

    # Brightness
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+

    #Eww
    bindsym --to-code $mod+p exec $eww_open
    bindsym --to-code $mod+Shift+p exec $eww_close

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+F1 workspace $wsF1
    bindsym $mod+F2 workspace $wsF2
    bindsym $mod+F3 workspace $wsF3
    bindsym $mod+F4 workspace $wsF4
    bindsym $mod+F5 workspace $wsF5
    bindsym $mod+F6 workspace $wsF6
    bindsym $mod+F7 workspace $wsF7
    bindsym $mod+F8 workspace $wsF8    
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#
# Startup things:
#

	# exec apps at start
	exec swaymsg "workspace 8; exec telegram-desktop;"
	exec swaymsg "workspace 5; exec spotify;"
	exec swaynsg "workspace 7; exec insync start;"
	exec swaymsg "workspace 3; exec kitty;"
	exec mako # notifications.
	exec emacs --daemon #idk if it will work, but I believe this will start emacs daemon whenever system is started. 
	exec ~/eww/eww/target/release/eww daemon

	# brightness, cuz my laptop have some troubles with it.
	exec brightnessctl set 50%
#
# Layout stuff:
#

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Modes
#
    #
    # Resizing containers:
    #
	mode "resize" {
    	     # left will shrink the containers width
    	     # right will grow the containers width
	     # up will shrink the containers height
	     # down will grow the containers height
	     bindsym $left resize shrink width 10px
	     bindsym $down resize grow height 10px
	     bindsym $up resize shrink height 10px
	     bindsym $right resize grow width 10px

    	     # Ditto, with arrow keys
    	     bindsym Left resize shrink width 10px
    	     bindsym Down resize grow height 10px
    	     bindsym Up resize shrink height 10px
	     bindsym Right resize grow width 10px

    	     # Return to default mode
    	     bindsym Return mode "default"
    	     bindsym Escape mode "default"
	     bindsym --to-code $mod+r mode "default"
}
bindsym --to-code $mod+r mode "resize"

    #
    # System mode: 
    #
    set $mode_system System: (s) suspend, (r) reboot, (S) shutdown
    mode "$mode_system" {
	     bindsym --to-code s exec systemctl suspend, mode "default"
	     bindsym --to-code r exec systemct reboot, mode "default"
	     bindsym --to-code Shift+s exec systemctl poweroff -i, mode "default"

	     # return to default mode
	     bindsym Return mode "default"
	     bindsym Escape mode "default"
	     bindsym --to-code $mod+Shift+e mode "default"
	     }

	     bindsym --to-code $mod+Shift+e mode "$mode_system"


    #
    # Screen capture
    #
    set $mode_screenshot Screenshot: 1 file (s), 2 file (w), 3 cp (s), 4 cp (w), 5 swappy
    mode "$mode_screenshot" {
    	 bindsym 1 exec 'grim -g "$(slurp)" ~/ps_$(date +"%Y%m%d%H%M%S").png', mode "default"
    	 bindsym 2 exec 'grim ~/ps_$(date +"%Y%m%d%H%M%S").png', mode "default"
    	 bindsym 3 exec 'grim -g "$(slurp)" - | wl-copy', mode "default"
    	 bindsym 4 exec 'grim - | wl-copy', mode "default"
    	 bindsym 5 exec 'grim -g "$(slurp)" - | swappy -f -', mode "default"

	 # back to normal: Enter or Escape
    	 bindsym Return mode "default"
	 bindsym Escape mode "default"
    	 bindsym $mod+Print mode "default"
	 }

	bindsym --to-code $mod+Print mode "$mode_screenshot"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
	swaybar_command waybar
}

include /etc/sway/config.d/*